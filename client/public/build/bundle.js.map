{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/boardHelpers.js","../../src/game.js","../../src/Play/Finish.svelte","../../src/Scoreboard/WinnerListing.svelte","../../src/Scoreboard/Winners.svelte","../../src/Rules.svelte","../../src/Home.svelte","../../src/Play/Starting.svelte","../../node_modules/svelte-media-query/src/MediaQuery.svelte","../../src/Play/Waiting.svelte","../../src/Play/Cell.svelte","../../src/Play/Game.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","class Square {\n  constructor(id, row, col, x, y, quadrant, color, size, letter) {\n    this.id = id;\n    this.row = row;\n    this.col = col;\n    this.x = x;\n    this.y = y;\n    this.quadrant = quadrant;\n    this.color = color;\n    this.size = size;\n    this.letter = letter;\n    this.selected = false;\n    this.animationDirection = \"none\";\n  }\n}\n\nexport function getQuadrant(row, col) {\n  if (row < 4 && col < 4) {\n    return 1;\n  } else if (row < 4 && col > 3) {\n    return 2;\n  } else if (row > 3 && col < 4) {\n    return 3;\n  } else if (row > 3 && col > 3) {\n    return 4;\n  }\n}\n\nexport function getStartingBoard(quadrant, data) {\n  let rows = 8;\n  let cols = 8;\n  let size = 50;\n  let buffer = 8;\n  let count = 0;\n  let color = \"isNotPlayerQuadrant\";\n  let letters = data[\"board\"];\n  let startingBoard = [];\n\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < cols; col++) {\n      let letter = letters[count];\n      let x = col * (size + buffer);\n      let y = row * (size + buffer);\n      let currentQuadrant = getQuadrant(row, col);\n      if (currentQuadrant == quadrant) {\n        color = \"isPlayerQuadrant\";\n      } else {\n        color = \"isNotPlayerQuadrant\";\n      }\n      let cell = new Square(count, row, col, x, y, currentQuadrant, color, size, letter);\n      startingBoard.push(cell);\n      count += 1;\n    }\n  }\n  return startingBoard;\n}\n","import { writable, get } from \"svelte/store\";\nimport { getQuadrant, getStartingBoard } from \"./boardHelpers\";\n\nexport const gameState = writable(\"disconnected\");\nexport const boardUpdate = writable([]);\nexport const board = writable(\"\");\nexport const quadrant = writable(1);\nexport const gameID = writable(\"\");\nexport const users = writable([\"\", \"\", \"\", \"\"]);\nexport const username = writable(\"\");\nexport const userIDs = writable([]);\nexport const userID = writable([]);\nexport const finalWords = writable([]);\nexport const finalScore = writable();\nexport const userCount = writable(0);\nexport const gameTimerStart = writable();\nexport const gameTimerProgress = writable();\n// export const connectionUrl = writable(\"localhost:3080\");\nexport const connectionUrl = writable(\"fourplay.fun\");\n\nlet socket = null;\n\nexport function setGameState(value) {\n  gameState.set(value);\n}\n\nfunction setUsersLocations(data) {\n  let orderedUsers = [];\n  let existingUsers = data[\"users\"];\n  let quads = data[\"quadrants\"];\n  let ids = data[\"user_ids\"];\n\n  for (let i = 0; i < existingUsers.length; i++) {\n    orderedUsers[quads[i] - 1] = existingUsers[i];\n    if (ids[i] == get(userID)) {\n      quadrant.set(quads[i]);\n    }\n  }\n  users.set(orderedUsers);\n  userIDs.set(data[\"user_ids\"]);\n}\n\nasync function runTimer() {\n  let elapsed = performance.now() - get(gameTimerStart);\n  gameTimerProgress.set((elapsed / 1000 / 90.5) * 100);\n}\n\nfunction startGame(op, data) {\n  setUsersLocations(data);\n  gameID.set(data[\"game_id\"]);\n  let startingBoard = getStartingBoard(get(quadrant), data);\n  board.set(startingBoard);\n  gameState.set(op);\n  gameTimerStart.set(performance.now());\n  setInterval(runTimer, 200);\n}\n\nfunction getSwap(row, col, currentRow, currentCol) {\n  if (Math.abs(row - currentRow) == 1 && col == currentCol) {\n    return [\"flipVerticalCurrent\", \"flipVerticalPrevious\"];\n  } else if (row == currentRow && Math.abs(col - currentCol) == 1) {\n    return [\"flipHorizontalCurrent\", \"flipHorizontalPrevious\"];\n  }\n  return \"none\";\n}\n\nexport function setAnimations(currentBoard, row1, col1, row2, col2) {\n  let idx1 = row1 * 8 + col1;\n  let idx2 = row2 * 8 + col2;\n  let swap = getSwap(row1, col1, row2, col2);\n  currentBoard[idx1].animationDirection = swap[0];\n  currentBoard[idx2].animationDirection = swap[1];\n  return currentBoard;\n}\n\nfunction updateBoard(data, currentBoard) {\n  let newBoard = data.board;\n  for (let i = 0; i < newBoard.length; i++) {\n    currentBoard[i].letter = newBoard[i];\n  }\n\n  if (getQuadrant(data.row1, data.col1) != get(quadrant)) {\n    currentBoard = setAnimations(currentBoard, data.row1, data.col1, data.row2, data.col2);\n  }\n  return currentBoard;\n}\n\nfunction selectCell(data) {\n  let row = data.row;\n  let col = data.col;\n  let id = row * 8 + col;\n  let selectedQuadrant = getQuadrant(row, col);\n  if (selectedQuadrant == get(quadrant)) {\n    return;\n  }\n  let tempBoard = get(board);\n  for (let i = 0; i < tempBoard.length; i++) {\n    if (tempBoard[i].quadrant == selectedQuadrant) {\n      tempBoard[i].selected = false;\n    }\n  }\n  tempBoard[id].selected = true;\n  board.set(tempBoard);\n}\n\nexport function finishGame(op, data) {\n  let wordsByLength = [[], [], [], [], [], []];\n  data[\"words\"].forEach(function (word) {\n    wordsByLength[8 - word.length].push(word);\n  });\n  finalWords.set(wordsByLength);\n  finalScore.set(data[\"score\"]);\n  gameState.set(op);\n}\n\nexport function connectServer() {\n  // let connectString = \"ws://\" + get(connectionUrl) + `/connect?user=${get(username)}`;\n  let connectString = \"wss://\" + get(connectionUrl) + `/connect?user=${get(username)}`;\n  gameState.set(\"waiting\");\n  socket = new WebSocket(connectString);\n\n  socket.addEventListener(\"open\", function (event) {\n    gameState.set(\"waiting\");\n  });\n\n  socket.addEventListener(\"message\", function (event) {\n    let msg = JSON.parse(event.data);\n    if (\"op\" in msg) {\n      let op = msg.op;\n      let data = msg.data;\n\n      switch (op) {\n        case \"abort-game\":\n          gameState.set(\"abort-game\");\n          break;\n        case \"finish-game\":\n          finishGame(op, data);\n          break;\n        case \"select\":\n          selectCell(data);\n          break;\n        case \"start-countdown\":\n          gameState.set(\"start-countdown\");\n          break;\n        case \"start-game\":\n          startGame(op, data);\n          break;\n        case \"update-board-on-swap\":\n          board.set(updateBoard(data, get(board)));\n          break;\n        case \"user-count\":\n          userCount.set(data[\"count\"]);\n          break;\n        case \"user-join\":\n          userID.set(data[\"user_id\"]);\n          break;\n      }\n    }\n  });\n}\n\n// Connection opened\nexport const sendMessage = message => {\n  if (socket.readyState <= 1) {\n    socket.send(message);\n  }\n};\n","<script>\n  import { setGameState } from \"../game\";\n  export let size;\n  export let words;\n  export let score;\n\n  let countHeaderColors = [\"#ff007f\", \"#55ff44\", \"#08e8de\", \"#ffaa1d\", \"#1974d2\", \"#44ca77\"];\n</script>\n\n<img class=\"logo\" src=\"./images/logo_new.png\" alt=\"log\" />\n<div class={size}>\n  <div class=\"title\">Words found</div>\n  <hr />\n  {#each words as wordSet, i}\n    {#if wordSet.length > 0}\n      <div class=\"outer-container\">\n        <div class=\"count-header\" style=\"background-color:{countHeaderColors[i]}\">{8 - i}</div>\n        <div class=\"words-container\">\n          {#each wordSet as word}\n            <div class=\"word\">{word}</div>\n          {/each}\n        </div>\n      </div>\n    {/if}\n  {/each}\n  <hr />\n  <div class=\"score\">Score: <span class=\"color-num\">{score}</span></div>\n</div>\n\n<button on:click|preventDefault={() => setGameState(\"disconnected\")}>Again?</button>\n\n<style>\n  button {\n    max-width: 300px;\n  }\n  .title {\n    font-family: \"Alfa Slab One\", cursive;\n    font-size: 2em;\n    margin-bottom: 0.1em;\n  }\n\n  .outer-container {\n    min-width: 100%;\n    max-width: 100%;\n    display: flex;\n    margin-bottom: 10px;\n  }\n\n  .words-container {\n    display: flex;\n    flex: 90%;\n    flex-wrap: wrap;\n    align-items: flex-start;\n    margin-bottom: 10px;\n  }\n\n  .count-header {\n    flex: 10%;\n    width: 20px;\n    height: 40px;\n    font-family: \"Alfa Slab One\", cursive;\n    text-align: center;\n    font-size: 1.3em;\n    border-radius: 5px;\n    padding: 4px;\n    padding-left: 8px;\n    padding-right: 8px;\n    color: white;\n    margin: 3px;\n  }\n\n  hr {\n    border-color: #1974d2;\n    width: 100%;\n    /* max-width: 450px; */\n  }\n\n  .word {\n    font-size: 18px;\n    margin: 5px;\n    align-self: center;\n  }\n\n  .score {\n    font-family: \"Alfa Slab One\", cursive;\n    white-space: nowrap;\n    font-size: 1.5em;\n  }\n\n  .color-num {\n    color: #1974d2;\n  }\n\n  button {\n    font-family: \"Alfa Slab One\", cursive;\n  }\n</style>\n","<script>\n  export let listing;\n</script>\n\n{#each listing as day, i}\n  <div class=\"outer-container\">\n    {#if i == 0}\n      <div class=\"score\">\n        <img class=\"score-img\" src=\"images/first.png\" alt=\"first place\" width=\"40px\" />\n        ({day.score})\n      </div>\n    {:else if i == 1}\n      <div class=\"score\">\n        <img class=\"score-img\" src=\"images/second.png\" alt=\"second place\" width=\"40px\" />\n        ({day.score})\n      </div>\n    {:else if i == 2}\n      <div class=\"score\">\n        <img class=\"score-img\" src=\"images/third.png\" alt=\"third place\" width=\"40px\" />\n        ({day.score})\n      </div>\n    {:else}\n      <div class=\"score\">\n        <img class=\"score-img\" src=\"images/runner.png\" alt=\"third place\" width=\"40px\" />\n        ({day.score})\n      </div>\n    {/if}\n\n    <div class=\"players-container\">\n      <div class=\"player\">{day.player1}</div>\n      <div class=\"player\">{day.player2}</div>\n      <div class=\"player\">{day.player3}</div>\n      <div class=\"player\">{day.player4}</div>\n    </div>\n  </div>\n{/each}\n\n<style>\n  .outer-container {\n    min-width: 100%;\n    max-width: 100%;\n    display: flex;\n    margin-bottom: 10px;\n  }\n\n  .players-container {\n    display: flex;\n    flex: 70%;\n    flex-wrap: wrap;\n    align-items: flex-start;\n  }\n\n  .score {\n    flex: 25%;\n    max-width: 120px;\n    padding: 5px;\n    align-self: center;\n    color: #1972d2;\n    font-family: \"Alfa Slab One\", cursive;\n    font-size: 1em;\n    margin-bottom: 16px;\n  }\n\n  .score-img {\n    margin-right: 8px;\n  }\n\n  .player {\n    padding: 6px;\n    font-size: 20px;\n    color: #1972d2;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    font-weight: 800;\n    font-size: 22px;\n  }\n</style>\n","<script>\n  import { onMount } from \"svelte\";\n  import { connectionUrl } from \"../game\";\n  import WinnerListing from \"./WinnerListing.svelte\";\n  export let size;\n  let today = [];\n  let yesterday = [];\n\n  onMount(async () => {\n    const response = await fetch(\"https://\" + $connectionUrl + \"/winners\", {\n      method: \"GET\",\n    });\n\n    if (response.status === 200) {\n      const data = await response.json();\n      today = data.today;\n      yesterday = data.yesterday;\n    } else {\n      throw new Error(response.statusText);\n    }\n  });\n</script>\n\n<img class=\"logo\" src=\"./images/logo_new.png\" alt=\"log\" />\n<div class={size}>\n  <p align=\"justify\">\n    Here find the daily winners of the blue lobster, silver snail and green rhino. We also have a\n    lovely assortment of runner ups.\n  </p>\n  <div class=\"title\">Today's leaders</div>\n  {#if today.length < 0}\n    No winners yet today!\n  {:else}\n    <WinnerListing listing={today} />\n  {/if}\n  {#if yesterday.length > 0}\n    <hr />\n    <div class=\"title\">Yesterday's leaders</div>\n    <WinnerListing listing={yesterday} />\n  {/if}\n</div>\n\n<style>\n  .title {\n    font-size: 28px;\n    font-weight: 800;\n    color: #1972d2;\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n\n  .points {\n    font-size: 1.5em;\n    font-family: \"Alfa Slab One\", cursive;\n    color: #1974d2;\n  }\n\n  .instruction-img {\n    width: 95%;\n    margin: 8px;\n  }\n\n  .highlight {\n    font-weight: 800;\n    color: #1974d2;\n  }\n\n  .slogan {\n    font-size: 22px;\n    font-family: \"Alfa Slab One\", cursive;\n    color: #1972d2;\n  }\n</style>\n","<script>\n  export let size;\n</script>\n\n<div style=\"width:100%\" class=\"centered-container\">\n  <img class=\"logo\" src=\"./images/logo_new.png\" alt=\"log\" />\n\n  <div class={size}>\n    <div class=\"title\">Rules</div>\n    <p align=\"justify\">\n      <span class=\"highlight\">Four players</span> cooperate to create as many words as possible.\n      Each player has their own <span class=\"highlight\">4x4 area, and moves by </span>\n      <span class=\"highlight\">swapping adjacent</span> letters.\n    </p>\n\n    <div class=\"instruction-img-mobile\">\n      <img src=\"images/swapping_transparent.gif\" alt=\"swapping letters\" />\n    </div>\n    <p align=\"justify\">\n      The goal is to work together to create longer words, as points scale exponentially with\n      length, with the minimum length being <span class=\"highlight\">three</span>. That means an\n      8-letter word is 32 points.\n    </p>\n    <div>\n      <span class=\"points\">1.</span>\n      <span class=\"points\">2.</span>\n      <span class=\"points\">4.</span>\n      <span class=\"points\">8.</span>\n      <span class=\"points\">16.</span>\n      <span class=\"points\">32.</span>\n    </div>\n    <p align=\"justify\">\n      Make words left to right and top to bottom, trying to connect across to other player areas\n    </p>\n    <div class=\"instruction-img-mobile\">\n      <img src=\"images/instructions-mobile.png\" alt=\"swapping letters\" />\n    </div>\n    <p align=\"justify\">The top ten teams of the day will be displayed.</p>\n  </div>\n</div>\n\n<style>\n  .title {\n    font-size: 28px;\n    font-weight: 800;\n    color: #1972d2;\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n\n  .points {\n    font-size: 1.5em;\n    font-family: \"Alfa Slab One\", cursive;\n    color: #1974d2;\n  }\n\n  .instruction-img {\n    width: 95%;\n    margin: 8px;\n  }\n\n  .highlight {\n    font-weight: 800;\n    color: #1974d2;\n  }\n\n  .slogan {\n    font-size: 22px;\n    font-family: \"Alfa Slab One\", cursive;\n    color: #1972d2;\n  }\n</style>\n","<script>\n  import { onMount } from \"svelte\";\n  import { username, setGameState, connectServer } from \"./game.js\";\n\n  export let size;\n  let inp;\n  let error = false;\n\n  function play() {\n    console.log($username.length, $username.length > 0 && $username.length < 22);\n    if ($username.length > 0 && $username.length < 22) {\n      error = false;\n      connectServer();\n    } else {\n      error = true;\n    }\n  }\n\n  onMount(() => {\n    inp.focus();\n  });\n</script>\n\n<img class=\"logo\" src=\"./images/logo_new.png\" alt=\"log\" />\n<div class={size}>\n  <p align=\"justify\">\n    A new board is released every day on which <span class=\"highlight\">four players</span> cooperate\n    to create as many words as possible in <span class=\"higlight\">90 seconds.</span>\n    Each player works in their own <span class=\"highlight\">4x4 area</span>\n    rearranging by <span class=\"highlight\">swapping adjacent</span> letters.\n  </p>\n\n  <div class=\"instruction-img\">\n    <img src=\"images/swapping_transparent.gif\" alt=\"swapping letters\" />\n  </div>\n\n  <p align=\"justify\">\n    Players should try to connect their words with others to make the long words possible, as points\n    scale exponentially. If this is your first time to play please <a\n      href=\"/\"\n      on:click|preventDefault={() => {\n        setGameState(\"rules\");\n      }}><b>read the rules first</b>,</a\n    > otherwise pick your username (1-21 characters) and play!\n  </p>\n</div>\n<form on:submit={play}>\n  <input\n    placeholder=\"Username\"\n    minlength=\"1\"\n    maxlength=\"21\"\n    bind:this={inp}\n    bind:value={$username}\n  />\n  <button on:click|preventDefault={play}>Play</button>\n</form>\n\n{#if error}\n  <div style=\"color: #ee110f; margin-top: 10px;\">Username must be 1-21 characters long.</div>\n{/if}\n\n<style>\n  .instruction-img {\n    margin: 8px;\n  }\n\n  button {\n    font-family: \"Alfa Slab One\", cursive;\n  }\n\n  .highlight {\n    font-weight: 800;\n    color: #1974d2;\n  }\n\n  .slogan {\n    font-size: 22px;\n    font-family: \"Alfa Slab One\", cursive;\n    color: #1972d2;\n  }\n</style>\n","<script>\n  import { setGameState } from \"../game.js\";\n\n  function startGame() {\n    setGameState(\"start-game\");\n  }\n</script>\n\n<div class=\"centered-container\">\n  <img class=\"logo\" src=\"./images/logo_new.png\" alt=\"log\" />\n  <div class=\"title\">Game is starting soon!</div>\n  <img src=\"images/starting.svg\" width=\"150px\" alt=\"loading\" />\n</div>\n\n<style>\n  .title {\n    font-family: \"Alfa Slab One\", cursive;\n    font-size: 2.5em;\n    margin-bottom: 1em;\n  }\n</style>\n","<script>\n    import { onMount } from \"svelte\";\n\n    export let query;\n\n    let mql;\n    let mqlListener;\n    let wasMounted = false;\n    let matches = false;\n\n    onMount(() => {\n        wasMounted = true;\n        return () => {\n            removeActiveListener();\n        };\n    });\n\n    $: {\n        if (wasMounted) {\n            removeActiveListener();\n            addNewListener(query);\n        }\n    }\n\n    function addNewListener(query) {\n        mql = window.matchMedia(query);\n        mqlListener = (v) => (matches = v.matches);\n        mql.addEventListener\n            ? mql.addEventListener(\"change\", mqlListener)\n            : mql.addListener(mqlListener);\n        matches = mql.matches;\n    }\n\n    function removeActiveListener() {\n        if (mql && mqlListener) {\n            mql.removeEventListener\n                ? mql.removeEventListener(\"change\", mqlListener)\n                : mql.removeListener(mqlListener);\n        }\n    }\n</script>\n\n<slot {matches} />\n","<script>\n  import { userCount } from \"../game.js\";\n\n  export let size;\n</script>\n\n<img class=\"logo\" src=\"./images/logo_new.png\" alt=\"log\" />\n<div class={size}>\n  <div class=\"title\">Finding players...</div>\n  <img src=\"images/waiting.svg\" width=\"150px\" alt=\"loading\" />\n  <div class=\"player-count\">Found: {$userCount}</div>\n</div>\n\n<style>\n  .title {\n    font-size: 2em;\n    font-family: \"Alfa Slab One\", cursive;\n    margin-bottom: 1em;\n  }\n\n  .player-count {\n    font-family: \"Alfa Slab One\", cursive;\n    font-size: 1.5em;\n    margin-top: 1.5em;\n  }\n</style>\n","<script>\n  export let x;\n  export let y;\n  export let size;\n  export let letter;\n  export let color;\n  export let selected;\n  export let selectCell;\n  export let id;\n  export let animationDirection;\n</script>\n\n<div class=\"cell-wrapper\" style=\"transform: translate({x}px, {y}px);\">\n  <div\n    class=\"cell {color} {animationDirection} {selected}\"\n    style=\"width: {size}px; height: {size}px;font-size: {size == 70 ? 46 : (size / 70) * 46}px;\"\n    on:click={() => selectCell(id)}\n  >\n    {letter}\n  </div>\n</div>\n\n<!-- <script ✂prettier:content✂=\"CiAgZXhwb3J0IGxldCB4OwogIGV4cG9ydCBsZXQgeTsKICBleHBvcnQgbGV0IHNpemU7CiAgZXhwb3J0IGxldCBsZXR0ZXI7CiAgZXhwb3J0IGxldCBjb2xvcjsKICBleHBvcnQgbGV0IHNlbGVjdGVkOwogIGV4cG9ydCBsZXQgc2VsZWN0Q2VsbDsKICBleHBvcnQgbGV0IGlkOwogIGV4cG9ydCBsZXQgYW5pbWF0aW9uU3RhdGU7CiAgZXhwb3J0IGxldCBhbmltYXRpb25EaXJlY3Rpb247Cg==\" ✂prettier:content✂=\"e30=\" ✂prettier:content✂=\"e30=\" ✂prettier:content✂=\"e30=\" ✂prettier:content✂=\"e30=\" ✂prettier:content✂=\"e30=\" ✂prettier:content✂=\"e30=\" ✂prettier:content✂=\"e30=\" ✂prettier:content✂=\"e30=\">{}</script>\n\n<div class=\"cell-wrapper\" style=\"transform: translate({x}px, {y}px);\">\n  {#if selected == 1 && animationState == 0}\n    <div\n      class=\"cell {color} selected\"\n      style=\"width: {size}px; height: {size}px; font-size: {size == 70 ? 46 : (size / 70) * 46}px;\"\n      on:click={() => selectCell(id)}\n    >\n      {letter}\n    </div>\n  {:else if (selected = 1 && animationState == 1)}\n    <div\n      class=\"cell {color} {animationDirection === 'horizontal'\n        ? 'flipHorizontalCurrent'\n        : 'flipVerticalCurrent'} selected\"\n      style=\"width: {size}px; height: {size}px;font-size: {size == 70 ? 46 : (size / 70) * 46}px;\"\n      on:click={() => selectCell(id)}\n    >\n      {letter}\n    </div>\n  {:else if (selected = 1 && animationState == 2)}\n    <div\n      class=\"cell {color} {animationDirection === 'horizontal'\n        ? 'flipHorizontalPrevious'\n        : 'flipVerticalPrevious'}\"\n      style=\"width: {size}px; height: {size}px; font-size: {size == 70 ? 46 : (size / 70) * 46}px;\"\n      on:click={() => selectCell(id)}\n    >\n      {letter}\n    </div>\n  {:else}\n    <div\n      class=\"cell {color} \"\n      style=\"width: {size}px; height: {size}px;\"\n      on:click={() => selectCell(id)}\n    >\n      <span class=\"letter\" style=\"font-size: {size == 70 ? 46 : (size / 70) * 46}px\">{letter}</span>\n    </div>\n  {/if}\n</div>\n\n<style ✂prettier:content✂=\"CiAgLmNlbGwtd3JhcHBlciB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQoKICAuY2VsbCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3NGQyOwogICAgZm9udC1zaXplOiA0NnB4OwogICAgZm9udC13ZWlnaHQ6IDcwMDsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsKICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAtbW96LXVzZXItc2VsZWN0OiBub25lOwogICAgLW1zLXVzZXItc2VsZWN0OiBub25lOwogICAgdXNlci1zZWxlY3Q6IG5vbmU7CiAgICBwYWRkaW5nOiAwOwogIH0KCiAgLmxldHRlciB7CiAgICBwYWRkaW5nOiAwOwogICAgcG9zaXRpb246IGFic29sdXRlOyAvKiAyICovCiAgICB3aWR0aDogaW5oZXJpdDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIHRvcDogNTAlOyAvKiAzICovCiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTAlKTsKICB9CgogIC5zZWxlY3RlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZhYTFkICFpbXBvcnRhbnQ7CiAgfQoKICAuaXNQbGF5ZXJRdWFkcmFudCB7CiAgICBvcGFjaXR5OiAxOwogIH0KCiAgLmlzTm90UGxheWVyUXVhZHJhbnQgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzVlYTRlOTsKICB9CgogIC5mbGlwSG9yaXpvbnRhbFByZXZpb3VzLAogIC5mbGlwSG9yaXpvbnRhbEN1cnJlbnQsCiAgLmZsaXBWZXJ0aWNhbEN1cnJlbnQsCiAgLmZsaXBWZXJ0aWNhbFByZXZpb3VzIHsKICAgIG9wYWNpdHk6IDE7CiAgICBhbmltYXRpb246IGZhZGUgMC4ycyBsaW5lYXI7CiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsKICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7CiAgfQoKICAuZmxpcEhvcml6b250YWxQcmV2aW91cyB7CiAgICBhbmltYXRpb24tbmFtZTogZmxpcEhvcml6b250YWxQcmV2aW91czsKICB9CgogIC5mbGlwSG9yaXpvbnRhbEN1cnJlbnQgewogICAgYW5pbWF0aW9uLW5hbWU6IGZsaXBIb3Jpem9udGFsQ3VycmVudDsKICB9CgogIC5mbGlwVmVydGljYWxQcmV2aW91cyB7CiAgICBhbmltYXRpb24tbmFtZTogZmxpcFZlcnRpY2FsUHJldmlvdXM7CiAgfQoKICAuZmxpcFZlcnRpY2FsQ3VycmVudCB7CiAgICBhbmltYXRpb24tbmFtZTogZmxpcFZlcnRpY2FsQ3VycmVudDsKICB9CgogIEBrZXlmcmFtZXMgZmxpcFZlcnRpY2FsUHJldmlvdXMgewogICAgMCUgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZhYTFkOwogICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZyk7CiAgICB9CiAgICAxJSB7CiAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgxODBkZWcpOwogICAgfQogICAgNTAlIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE5NzRkMjsKICAgIH0KICAgIDUxJSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxOTc0ZDI7CiAgICB9CiAgICAxMDAlIHsKICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKDM2MGRlZyk7CiAgICB9CiAgfQoKICBAa2V5ZnJhbWVzIGZsaXBWZXJ0aWNhbEN1cnJlbnQgewogICAgMCUgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3NGQyOwogICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZyk7CiAgICB9CiAgICAxJSB7CiAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgxODBkZWcpOwogICAgfQogICAgNTAlIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE5NzRkMjsKICAgIH0KICAgIDUxJSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmFhMWQ7CiAgICB9CiAgICAxMDAlIHsKICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKDM2MGRlZyk7CiAgICB9CiAgfQoKICBAa2V5ZnJhbWVzIGZsaXBIb3Jpem9udGFsUHJldmlvdXMgewogICAgMCUgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZhYTFkOwogICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMGRlZyk7CiAgICB9CiAgICAxJSB7CiAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpOwogICAgfQogICAgNTAlIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzVmOTNjMjsKICAgIH0KICAgIDUxJSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxOTc0ZDI7CiAgICB9CiAgICAxMDAlIHsKICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDM2MGRlZyk7CiAgICB9CiAgfQoKICBAa2V5ZnJhbWVzIGZsaXBIb3Jpem9udGFsQ3VycmVudCB7CiAgICAwJSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxOTc0ZDI7CiAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgwZGVnKTsKICAgIH0KICAgIDElIHsKICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7CiAgICB9CiAgICA1MCUgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3NGQyOwogICAgfQogICAgNTElIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYWExZDsKICAgIH0KICAgIDEwMCUgewogICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMzYwZGVnKTsKICAgIH0KICB9Cg==\" ✂prettier:content✂=\"\" ✂prettier:content✂=\"\" ✂prettier:content✂=\"\" ✂prettier:content✂=\"\" ✂prettier:content✂=\"\" ✂prettier:content✂=\"\" ✂prettier:content✂=\"\" ✂prettier:content✂=\"\"></style> -->\n<style>\n  .cell-wrapper {\n    position: absolute;\n    cursor: pointer;\n  }\n\n  .cell {\n    display: flex;\n    color: #ffffff;\n    background-color: #1974d2;\n    font-size: 46px;\n    font-weight: 700;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    padding: 0;\n  }\n\n  .letter {\n    padding: 0;\n    position: absolute; /* 2 */\n    width: inherit;\n    text-align: center;\n    top: 50%; /* 3 */\n    transform: translate(0, -50%);\n  }\n\n  .selected {\n    background-color: #ffaa1d !important;\n  }\n\n  .isPlayerQuadrant {\n    opacity: 1;\n  }\n\n  .isNotPlayerQuadrant {\n    background-color: #5ea4e9;\n  }\n\n  .flipHorizontalPrevious,\n  .flipHorizontalCurrent,\n  .flipVerticalCurrent,\n  .flipVerticalPrevious {\n    opacity: 1;\n    animation: fade 0.2s linear;\n    animation-fill-mode: forwards;\n    animation-iteration-count: 1;\n  }\n\n  .flipHorizontalPrevious {\n    animation-name: flipHorizontalPrevious;\n  }\n\n  .flipHorizontalCurrent {\n    animation-name: flipHorizontalCurrent;\n  }\n\n  .flipVerticalPrevious {\n    animation-name: flipVerticalPrevious;\n  }\n\n  .flipVerticalCurrent {\n    animation-name: flipVerticalCurrent;\n  }\n\n  @keyframes flipVerticalPrevious {\n    0% {\n      background-color: #ffaa1d;\n      transform: rotateX(0deg);\n    }\n    1% {\n      transform: rotateX(180deg);\n    }\n    50% {\n      background-color: #1974d2;\n    }\n    51% {\n      background-color: #1974d2;\n    }\n    100% {\n      transform: rotateX(360deg);\n    }\n  }\n\n  @keyframes flipVerticalCurrent {\n    0% {\n      background-color: #1974d2;\n      transform: rotateX(0deg);\n    }\n    1% {\n      transform: rotateX(180deg);\n    }\n    50% {\n      background-color: #1974d2;\n    }\n    51% {\n      background-color: #ffaa1d;\n    }\n    100% {\n      transform: rotateX(360deg);\n    }\n  }\n\n  @keyframes flipHorizontalPrevious {\n    0% {\n      background-color: #ffaa1d;\n      transform: rotateY(0deg);\n    }\n    1% {\n      transform: rotateY(180deg);\n    }\n    50% {\n      background-color: #5f93c2;\n    }\n    51% {\n      background-color: #1974d2;\n    }\n    100% {\n      transform: rotateY(360deg);\n    }\n  }\n\n  @keyframes flipHorizontalCurrent {\n    0% {\n      background-color: #1974d2;\n      transform: rotateY(0deg);\n    }\n    1% {\n      transform: rotateY(180deg);\n    }\n    50% {\n      background-color: #1974d2;\n    }\n    51% {\n      background-color: #ffaa1d;\n    }\n    100% {\n      transform: rotateY(360deg);\n    }\n  }\n</style>\n","<script>\n  import { onMount } from \"svelte\";\n  import Cell from \"./Cell.svelte\";\n  import { getQuadrant } from \"../boardHelpers\";\n  import { gameTimerProgress, users, board, quadrant, gameID, sendMessage } from \"../game\";\n\n  let windowWidth;\n  let size = 50;\n  let buffer = 8;\n  let maxBuffer = 8;\n  let offset;\n  let currentSelected = -1;\n\n  function resizeBoard() {\n    if ($board) {\n      offset = (windowWidth - 8 * (size + buffer)) / 2 - buffer / 2;\n      if (windowWidth > 500) {\n        size = 50 + (20 * windowWidth) / 2000;\n        buffer = maxBuffer;\n        offset -= (buffer * 8) / 2;\n      } else if ($board) {\n        size = (windowWidth / 500) * 50;\n        buffer = (windowWidth / 500) * maxBuffer;\n      }\n      for (let i = 0; i < $board.length; i++) {\n        $board[i].x = $board[i].col * (size + buffer);\n        $board[i].y = $board[i].row * (size + buffer);\n      }\n      $board = $board;\n    }\n  }\n\n  function getSwap(row, col) {\n    let currentRow = $board[currentSelected].row;\n    let currentCol = $board[currentSelected].col;\n    if (Math.abs(row - currentRow) == 1 && col == currentCol) {\n      return [\"flipVerticalCurrent\", \"flipVerticalPrevious\"];\n    } else if (row == currentRow && Math.abs(col - currentCol) == 1) {\n      return [\"flipHorizontalCurrent\", \"flipHorizontalPrevious\"];\n    }\n    return \"none\";\n  }\n\n  function sendSelect(id) {\n    let event = {\n      op: \"select\",\n      row: $board[id].row,\n      col: $board[id].col,\n    };\n    let msg = { op: \"game-event\", game_id: $gameID, event: JSON.stringify(event) };\n    msg = JSON.stringify(msg);\n    sendMessage(msg);\n  }\n\n  function sendSwap(idx1, idx2) {\n    let event = {\n      op: \"swap\",\n      row1: $board[idx1].row,\n      col1: $board[idx1].col,\n      row2: $board[idx2].row,\n      col2: $board[idx2].col,\n    };\n    let msg = { op: \"game-event\", game_id: $gameID, event: JSON.stringify(event) };\n    msg = JSON.stringify(msg);\n    sendMessage(msg);\n  }\n\n  function setSelected(id) {\n    $board[id].selected = true;\n    sendSelect(id);\n\n    if (currentSelected != -1) {\n      $board[currentSelected].selected = false;\n    }\n    if ($board[id].selected) {\n      currentSelected = id;\n    } else {\n      currentSelected = -1;\n    }\n  }\n\n  function selectCell(id) {\n    let row = $board[id].row;\n    let col = $board[id].col;\n    let swap = \"none\";\n    if (getQuadrant(row, col) != $quadrant) {\n      return;\n    }\n\n    if (currentSelected != -1) {\n      swap = getSwap(row, col);\n      $board[currentSelected].animationDirection = swap[0];\n      $board[id].animationDirection = swap[1];\n      if (swap != \"none\") {\n        let temp = $board[currentSelected].letter;\n        $board[currentSelected].letter = $board[id].letter;\n        $board[id].letter = temp;\n        sendSwap(id, currentSelected);\n      }\n    }\n\n    setSelected(id);\n  }\n\n  onMount(() => {\n    resizeBoard();\n  });\n\n  function update() {\n    $board = $board;\n  }\n  $: windowWidth, resizeBoard();\n  $: $board, update();\n</script>\n\n<svelte:window bind:innerWidth={windowWidth} />\n\n<div id=\"progressbar\" style=\"position: relative; margin-left: {offset}px\" class=\"wrapper\">\n  {#if $gameTimerProgress >= 0}\n    <progress style=\"width: {size * 8 + buffer * 7}px\" value={100 - $gameTimerProgress} max=\"100\" />\n  {/if}\n</div>\n<div style=\"position: relative; margin-left: {offset}px\" class=\"wrapper\">\n  <div class=\"name\" style=\"color: #05b008; position:absolute; top: -36px;\">{$users[0]}</div>\n  <div\n    class=\"name\"\n    style=\"color: #ffaa1d; position:absolute; top: -36px; left: {size * 4 + buffer * 4}px\"\n  >\n    {$users[1]}\n  </div>\n</div>\n<div style=\"margin-left: {offset}px\" class=\"wrapper\">\n  {#if $board}\n    {#each $board as square, i}\n      <Cell\n        id={square.id}\n        x={square.x}\n        y={square.y}\n        {size}\n        color={square.color}\n        letter={square.letter}\n        selected={square.selected ? \"selected\" : \"\"}\n        animationDirection={square.animationDirection}\n        {selectCell}\n      />\n    {/each}\n  {/if}\n</div>\n<div\n  style=\"position: relative; margin-left: {offset}px; margin-top: {60 +\n    size * 8 +\n    buffer * 8 +\n    20}px\"\n>\n  <div class=\"name\" style=\"color: #1974d1; position:absolute; top: -20px;\">{$users[2]}</div>\n  <div\n    class=\"name\"\n    style=\"color: #ff007f; position:absolute; top: -20px; left: {size * 4 + buffer * 4}px\"\n  >\n    {$users[3]}\n  </div>\n</div>\n\n<style>\n  progress {\n    border-radius: 7px;\n    width: 80%;\n    height: 26px;\n  }\n\n  progress::-webkit-progress-bar {\n    background-color: #ffaa1d;\n    border-radius: 7px;\n  }\n  progress::-webkit-progress-value {\n    background-color: #1974d2;\n    border-radius: 7px;\n  }\n\n  progress::-moz-progress-bar {\n    background-color: #1974d2;\n    border-radius: 7px;\n  }\n\n  .wrapper {\n    margin-top: 60px;\n  }\n\n  .name {\n    font-family: \"Alfa Slab One\", cursive;\n    font-size: 22px;\n  }\n</style>\n","<script>\n  import { gameState, finalScore, finalWords, setGameState } from \"./game.js\";\n  import Finish from \"./Play/Finish.svelte\";\n  import Winners from \"./Scoreboard/Winners.svelte\";\n  import Rules from \"./Rules.svelte\";\n  import Home from \"./Home.svelte\";\n  import Starting from \"./Play/Starting.svelte\";\n  import MediaQuery from \"svelte-media-query\";\n  import Waiting from \"./Play/Waiting.svelte\";\n  import Game from \"./Play/Game.svelte\";\n</script>\n\n<MediaQuery query=\"(max-width:480px)\" let:matches>\n  {#if matches}\n    <ul class=\"mobile\">\n      <li>\n        <a class=\"active\" href=\"/\"><img src=\"images/logo_new.png\" width=\"110px\" alt=\"home\" /></a>\n      </li>\n      <li>\n        <a class=\"active\" href=\"/\" on:click|preventDefault={() => setGameState(\"disconnected\")}\n          >play</a\n        >\n      </li>\n\n      <li>\n        <a class=\"active\" href=\"/\" on:click|preventDefault={() => setGameState(\"rules\")}>rules</a>\n      </li>\n\n      <li>\n        <a class=\"active\" href=\"/\" on:click|preventDefault={() => setGameState(\"winners\")}\n          >winners</a\n        >\n      </li>\n    </ul>\n  {/if}\n</MediaQuery>\n\n<MediaQuery query=\"(min-width: 481px)\" let:matches>\n  {#if matches}\n    <ul class=\"not-mobile\">\n      <li>\n        <a class=\"active\" href=\"/\"><img src=\"images/logo_new.png\" width=\"210px\" alt=\"home\" /></a>\n      </li>\n\n      <li>\n        <a class=\"active\" href=\"/\" on:click|preventDefault={() => setGameState(\"disconnected\")}\n          >play</a\n        >\n      </li>\n\n      <li>\n        <a class=\"active\" href=\"/\" on:click|preventDefault={() => setGameState(\"rules\")}>rules</a>\n      </li>\n\n      <li>\n        <a class=\"active\" href=\"/\" on:click|preventDefault={() => setGameState(\"winners\")}\n          >winners</a\n        >\n      </li>\n    </ul>\n  {/if}\n</MediaQuery>\n\n<MediaQuery query=\"(min-width: 481px)\" let:matches>\n  {#if matches}\n    <div class=\"centered-container\">\n      {#if $gameState == \"disconnected\"}\n        <Home size={\"desktop\"} />\n      {:else if $gameState == \"waiting\"}\n        <Waiting size={\"desktop\"} />\n      {:else if $gameState == \"start-countdown\"}\n        <Starting />\n      {:else if $gameState == \"rules\"}\n        <Rules size={\"desktop\"} />\n      {:else if $gameState == \"winners\"}\n        <Winners size={\"desktop\"} />\n      {:else if $gameState == \"abort-game\"}\n        Game was aborted!\n      {:else if $gameState == \"finish-game\"}\n        <Finish size={\"desktop\"} words={$finalWords} score={$finalScore} />\n      {/if}\n    </div>\n  {/if}\n</MediaQuery>\n\n<MediaQuery query=\"(max-width:480px)\" let:matches>\n  {#if matches}\n    <div class=\"centered-container\">\n      {#if $gameState == \"disconnected\"}\n        <Home size={\"mobile\"} />\n      {:else if $gameState == \"waiting\"}\n        <Waiting size={\"mobile\"} />\n      {:else if $gameState == \"start-countdown\"}\n        <Starting />\n      {:else if $gameState == \"rules\"}\n        <Rules size={\"mobile\"} />\n      {:else if $gameState == \"winners\"}\n        <Winners size={\"mobile\"} />\n      {:else if $gameState == \"abort-game\"}\n        Game was aborted!\n      {:else if $gameState == \"finish-game\"}\n        <Finish size={\"mobile\"} words={$finalWords} score={$finalScore} />\n      {/if}\n    </div>\n  {/if}\n</MediaQuery>\n\n{#if $gameState == \"start-game\"}\n  <Game />\n{/if}\n\n<!-- <Finish\n  words={[\n    \"test\",\n    \"test\",\n    \"teasda\",\n    \"teasdf\",\n    \"teasdf\",\n    \"teasdf\",\n    \"teasdf\",\n    \"teasdf\",\n    \"teasdf\",\n    \"teast\",\n  ]}\n  score={145}\n/> -->\n<style>\n  a,\n  a:active {\n    font-family: \"Alfa Slab One\", cursive;\n    color: #1974d2;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n\n  li {\n    float: left;\n  }\n\n  li a {\n    display: block;\n    text-align: center;\n    padding: 10px 9px;\n    text-decoration: none;\n  }\n\n  .not-mobile {\n    font-size: 2.3em;\n  }\n\n  .mobile {\n    font-size: 1.2em;\n  }\n\n  li a:hover {\n    color: #fcb95d;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","null_to_empty","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","Square","constructor","id","row","col","x","y","quadrant","color","letter","selected","animationDirection","getQuadrant","gameState","board","gameID","users","username","userIDs","userID","finalWords","finalScore","userCount","gameTimerStart","gameTimerProgress","connectionUrl","socket","setGameState","async","runTimer","elapsed","performance","now","get","startGame","op","orderedUsers","existingUsers","quads","ids","setUsersLocations","startingBoard","count","letters","currentQuadrant","cell","getStartingBoard","setInterval","setAnimations","currentBoard","row1","col1","row2","col2","idx1","idx2","swap","currentRow","currentCol","Math","abs","connectServer","connectString","WebSocket","msg","JSON","parse","wordsByLength","word","finishGame","selectedQuadrant","tempBoard","selectCell","newBoard","updateBoard","sendMessage","message","readyState","send","t0_value","div0","div2","div1","div","t","t_value","create_if_block","img","hr0","hr1","span","button","words","score","t1_value","t1","player1","t3_value","player2","t5_value","player3","t7_value","player4","create_if_block_1","create_if_block_2","div5","div4","div3","t3","t5","t7","listing","hr","today","yesterday","response","fetch","$connectionUrl","method","status","statusText","json","img0","p0","p1","p2","p3","form","inp","error","focus","console","log","$username","$$invalidate","$$value","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","undefined","merged","len","max","mql","mqlListener","query","wasMounted","matches","removeActiveListener","removeListener","window","matchMedia","v","addListener","addNewListener","img1","progress","progress_value_value","each_blocks","cell_changes","t6_value","t8_value","if_block0","div6","div7","current","t6","t8","windowWidth","offset","buffer","currentSelected","resizeBoard","$board","setSelected","game_id","$gameID","stringify","sendSelect","$quadrant","getSwap","temp","sendSwap","ul","li0","li1","a1","li2","a2","li3","a3","create_if_block_18","create_if_block_17","create_if_block_9","if_block","body"],"mappings":"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"}